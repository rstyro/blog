<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fblog%2F2019%2F01%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[Java面试前篇]]></title>
    <url>%2Fblog%2F2019%2F01%2F11%2FJava%E9%9D%A2%E8%AF%95%E5%89%8D%E7%AF%87%2F</url>
    <content type="text"></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-笔记]]></title>
    <url>%2Fblog%2F2019%2F01%2F10%2FHexo-%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[一、前置条件1、安装Git 下载地址：https://git-scm.com/ 2、安装Node.js 下载地址：http://nodejs.cn/download/ 二、安装Hexo12345678910111213141516171819# 安装 hexonpm install -g hexo# 查看是否安装成功，查看版本号hexo -v# 初始化Hexo，在当前目录下，创建一个文件夹为blog 的博客hexo init blog#生成静态文件hexo generate# 启动,默认访问：http://localhost:4000/hexo s# 清除缓存，和已生成的静态文件hexo clean 三、修改主题以下都是以next主题为例子12# 可以在https://hexo.io/themes/可以查看你喜欢的主题,然后 clone 到themes文件夹下即可,比如next 主题git clone https://github.com/theme-next/hexo-theme-next themes/next 四、配置一、基本配置编辑文件路径站点根目录 /下 _config.yml 字段 说明 title 博客的名称。 subtitle 根据主题的不同，有的会显示有的不会显示。 description 主要用于SEO，告诉搜索引擎一个关于站点的简单描述，通常建议在其中包含网站的关键词。 author 作者名称，用于主题显示文章的作者。 language 语言会对应的解析正在应用的主题中的languages文件夹下的不同语言文件。所以这里的名称要和languages文件夹下的语言文件名称一致。 timezone Asia/Shanghai //可不填写。 二、主题基本配置修改主题配置文件，在菜单项添加以下内容(把注释打开即可)1234567891011121314menu: home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat# Enable/Disable menu icons / item badges.menu_settings: icons: false #是否显示Icon badges: false 三、新建页面123hexo new page tagshexo new page abouthexo new page categories 四、设置头像123456789101112# Sidebar Avataravatar: # in theme directory(source/images): /images/avatar.gif # in site directory(source/uploads): /uploads/avatar.gif # You can also use other linking images. url: #你的头像地址 # If true, the avatar would be dispalyed in circle. rounded: false # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar. opacity: 1 # If true, the avatar would be rotated with the cursor. rotated: false 五、修改底部去掉 由 Hexo 强力驱动 v3.8.0 | 主题 – NexT.Muse v6.7.0打开主题的_config.yml 配置文件，找到如下信息，把enable:true 改为 enable:false把powered 与1234567891011121314151617181920# If not defined, `author` from Hexo main config will be used.copyright:# -------------------------------------------------------------powered: # Hexo link (Powered by Hexo). enable: false # Version info of Hexo after Hexo link (vX.X.X). version: truetheme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: true# -------------------------------------------------------------# Beian icp information for Chinese users. In China, every legal website should have a beian icp in website footer.# http://www.miitbeian.gov.cnbeian: enable: false icp: 六、添加顶部加载在\themes\next\layout\_custom head.swig文件中添加如下代码123456789101112131415&lt;script src="//cdn.bootcss.com/pace/1.0.2/pace.min.js"&gt;&lt;/script&gt;&lt;link href="//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css" rel="stylesheet"&gt;&lt;style&gt; .pace .pace-progress &#123; background: #1E92FB; /*进度条颜色*/ height: 3px; &#125; .pace .pace-progress-inner &#123; box-shadow: 0 0 10px #1E92FB, 0 0 5px #1E92FB; /*阴影颜色*/ &#125; .pace .pace-activity &#123; border-top-color: #1E92FB; /*上边框颜色*/ border-left-color: #1E92FB; /*左边框颜色*/ &#125;&lt;/style&gt; 七、文章添加阴影在 themes\next\source\css\_custom\custom.styl 添加如下代码12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 八、在文章末尾添加“文章结束”标记1、在路径 \themes\next\layout\_macro 文件夹中新建 passage-end-tag.swig 文件添加内容如下12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 2、打开\themes\next\layout_macro\post.swig文件，在post-body后，post-footer前，添加下面内容：添加内容如下12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 放的位置如下：12345678910 &#123;#####################&#125; &#123;### END POST BODY ###&#125; &#123;#####################&#125; &lt;div&gt;&#123;% if not is_index %&#125;&#123;% include &apos;passage-end-tag.swig&apos; %&#125;&#123;% endif %&#125;&lt;/div&gt; 3、打开主题配置文件（_config.yml),在末尾添加：123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 如果出现乱码，记得把 passage-end-tag.swig 文件 用类似 Notepad++ 的工具转成UTF-8 九、底部标签样式修改\themes\next\layout\_macro\post.swig 中文件，command+f搜索rel=&quot;tag&quot;&gt;#，将#替换成,修改后，片段代码如下：12345678&lt;footer class=&quot;post-footer&quot;&gt; &#123;% if post.tags and post.tags.length and not is_index %&#125; &lt;div class=&quot;post-tags&quot;&gt; &#123;% for tag in post.tags %&#125; &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; &#123;% endfor %&#125; &lt;/div&gt; &#123;% endif %&#125; 十、文章底部加版权1、手动修改主题目录下的 \themes\next\layout\_macro\post.swig 文件，找到 post-footer 所在的标签，添加以下内容：123456789101112131415161718&lt;div&gt; &#123;# 此处判断是否在索引列表中 #&#125; &#123;% if not is_index %&#125;&lt;ul class=&quot;post-copyright&quot;&gt; &lt;li class=&quot;post-copyright-author&quot;&gt; &lt;strong&gt;本文作者：&lt;/strong&gt;&#123;&#123; theme.author &#125;&#125; &lt;/li&gt; &lt;li class=&quot;post-copyright-link&quot;&gt; &lt;strong&gt;本文链接：&lt;/strong&gt; &lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.path &#125;&#125;&lt;/a&gt; &lt;/li&gt; &lt;li class=&quot;post-copyright-license&quot;&gt; &lt;strong&gt;版权： &lt;/strong&gt; 转载注明出处！ &lt;/li&gt;&lt;/ul&gt;&#123;% endif %&#125;&lt;/div&gt; 2、添加样式在 \themes\next\source\css\_custom\custom.styl 文件,添加如下内容：1234567.post-copyright &#123; margin: 1em 0 0; padding: 0.5em 1em; border-left: 3px solid #ff1700; background-color: #f9f9f9; list-style: none;&#125; 十一、添加评论注册 OAuth Application 要确保填入正确的 callback URL（一般是网站的域名)打开 themes\next\_config.xml 文件,修改如下：123456789101112131415# Gitment# Introduction: https://github.com/imsun/gitmentgitment: enable: true # 这个设为true mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway count: true # Show comments count in post meta area lazy: false # Comments lazy loading with a button cleanly: false # Hide 'Powered by ...' on footer, and more language: # Force language, or auto switch by theme github_user: rstyro # MUST HAVE, Your Github Username github_repo: blog # MUST HAVE, The name of the repo you use to store Gitment comments client_id: 你的OAuth Application 的ID client_secret: 你的OAuth Application 的Secret proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled 十二、压缩五、部署到GitHub准备工作在Github 创建一个仓库为blog,并从master 分支，新建一个dev分支dev 分支就是我们的源代码分支，master,就是我们生成的静态文件。 一、安装Git部署插件12# 安装git 部署插件npm install hexo-deployer-git --save 二、修改站点配置文件修改 配置文件 _config.yml 在deploy 选项,修改如下123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/rstyro/blog.git # 你的github 仓库地址 branch: master 三、多台终端部署123456789# 此时在另一终端更新博客，只需要将Github的dev分支clone下来，进行初次的相关配置git clone -b dev https://github.com/rstyro/blog.git //将Github中hexo分支clone到本地cd blog //切换到刚刚clone的文件夹内npm install //注意，这里一定要切换到刚刚clone的文件夹内执行，安装必要的所需组件，不用再inithexo new post "new blog name" //新建一个.md文件，并编辑完成自己的博客内容git add source //经测试每次只要更新sorcerer中的文件到Github中即可，因为只是新建了一篇新博客git commit -m "XX"git push origin hexo //更新分支hexo d -g //push更新完分支之后将自己写的博客对接到自己搭的博客网站上，同时同步了Github中的master]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
